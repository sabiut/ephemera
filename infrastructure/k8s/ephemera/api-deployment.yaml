apiVersion: apps/v1
kind: Deployment
metadata:
  name: ephemera-api
  namespace: ephemera-system
  labels:
    app: ephemera
    component: api
spec:
  replicas: 2
  selector:
    matchLabels:
      app: ephemera
      component: api
  template:
    metadata:
      labels:
        app: ephemera
        component: api
    spec:
      serviceAccountName: ephemera-api
      containers:
      - name: api
        image: us-central1-docker.pkg.dev/ephemera-dev-2025/ephemera/ephemera-api:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8000
          name: http
        env:
        # Non-sensitive config from ConfigMap
        - name: ENVIRONMENT
          valueFrom:
            configMapKeyRef:
              name: ephemera-config
              key: ENVIRONMENT
        - name: BASE_DOMAIN
          valueFrom:
            configMapKeyRef:
              name: ephemera-config
              key: BASE_DOMAIN
        - name: KUBECONFIG_PATH
          valueFrom:
            configMapKeyRef:
              name: ephemera-config
              key: KUBECONFIG_PATH
        - name: CLUSTER_NAME
          valueFrom:
            configMapKeyRef:
              name: ephemera-config
              key: CLUSTER_NAME
        - name: AWS_REGION
          valueFrom:
            configMapKeyRef:
              name: ephemera-config
              key: AWS_REGION
        - name: AWS_ACCOUNT_ID
          valueFrom:
            configMapKeyRef:
              name: ephemera-config
              key: AWS_ACCOUNT_ID
        # Sensitive config from Secret
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: ephemera-secrets
              key: DATABASE_URL
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: ephemera-secrets
              key: REDIS_URL
        - name: CELERY_BROKER_URL
          valueFrom:
            secretKeyRef:
              name: ephemera-secrets
              key: CELERY_BROKER_URL
        - name: CELERY_RESULT_BACKEND
          valueFrom:
            secretKeyRef:
              name: ephemera-secrets
              key: CELERY_RESULT_BACKEND
        - name: GITHUB_APP_ID
          valueFrom:
            secretKeyRef:
              name: ephemera-secrets
              key: GITHUB_APP_ID
        - name: GITHUB_APP_CLIENTID
          valueFrom:
            secretKeyRef:
              name: ephemera-secrets
              key: GITHUB_APP_CLIENTID
        - name: GITHUB_WEBHOOK_SECRET
          valueFrom:
            secretKeyRef:
              name: ephemera-secrets
              key: GITHUB_WEBHOOK_SECRET
        - name: GITHUB_APP_PRIVATE_KEY
          valueFrom:
            secretKeyRef:
              name: ephemera-secrets
              key: GITHUB_APP_PRIVATE_KEY
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: ephemera-secrets
              key: SECRET_KEY
        - name: GITHUB_APP_PRIVATE_KEY_PATH
          value: "/tmp/github-app-key.pem"
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 3
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health/ready
            port: 8000
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ephemera-api
  namespace: ephemera-system
  annotations:
    iam.gke.io/gcp-service-account: gke-kubectl-runner@ephemera-dev-2025.iam.gserviceaccount.com
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: ephemera-api
rules:
- apiGroups: [""]
  resources: ["namespaces", "services", "pods", "configmaps", "secrets"]
  verbs: ["get", "list", "create", "update", "patch", "delete"]
- apiGroups: ["apps"]
  resources: ["deployments", "replicasets"]
  verbs: ["get", "list", "create", "update", "patch", "delete"]
- apiGroups: ["networking.k8s.io"]
  resources: ["ingresses"]
  verbs: ["get", "list", "create", "update", "patch", "delete"]
- apiGroups: [""]
  resources: ["resourcequotas"]
  verbs: ["get", "list", "create", "update", "patch", "delete"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: ephemera-api
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: ephemera-api
subjects:
- kind: ServiceAccount
  name: ephemera-api
  namespace: ephemera-system
